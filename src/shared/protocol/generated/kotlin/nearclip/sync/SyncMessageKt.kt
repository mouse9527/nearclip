// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sync.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.sync;

@kotlin.jvm.JvmName("-initializesyncMessage")
public inline fun syncMessage(block: nearclip.sync.SyncMessageKt.Dsl.() -> kotlin.Unit): nearclip.sync.Sync.SyncMessage =
  nearclip.sync.SyncMessageKt.Dsl._create(nearclip.sync.Sync.SyncMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * 同步消息
 * ```
 *
 * Protobuf type `nearclip.sync.SyncMessage`
 */
public object SyncMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.sync.Sync.SyncMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.sync.Sync.SyncMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.sync.Sync.SyncMessage = _builder.build()

    /**
     * `string device_id = 1;`
     */
    public var deviceId: kotlin.String
      @kotlin.jvm.JvmName("getDeviceId")
        get() = _builder.deviceId
      @kotlin.jvm.JvmName("setDeviceId")
        set(value) {
        _builder.deviceId = value
      }
    /**
     * `string device_id = 1;`
     */
    public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

    /**
     * `.nearclip.sync.SyncOperation operation = 2;`
     */
    public var operation: nearclip.sync.Sync.SyncOperation
      @kotlin.jvm.JvmName("getOperation")
        get() = _builder.operation
      @kotlin.jvm.JvmName("setOperation")
        set(value) {
        _builder.operation = value
      }
    public var operationValue: kotlin.Int
      @kotlin.jvm.JvmName("getOperationValue")
        get() = _builder.operationValue
      @kotlin.jvm.JvmName("setOperationValue")
        set(value) {
        _builder.operationValue = value
      }
    /**
     * `.nearclip.sync.SyncOperation operation = 2;`
     */
    public fun clearOperation() {
      _builder.clearOperation()
    }

    /**
     * `.nearclip.sync.ClipboardData data = 3;`
     */
    public var data: nearclip.sync.Sync.ClipboardData
      @kotlin.jvm.JvmName("getData")
        get() = _builder.data
      @kotlin.jvm.JvmName("setData")
        set(value) {
        _builder.data = value
      }
    /**
     * `.nearclip.sync.ClipboardData data = 3;`
     */
    public fun clearData() {
      _builder.clearData()
    }
    /**
     * `.nearclip.sync.ClipboardData data = 3;`
     * @return Whether the data field is set.
     */
    public fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }

    public val SyncMessageKt.Dsl.dataOrNull: nearclip.sync.Sync.ClipboardData?
      get() = _builder.dataOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ChunksProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     */
     public val chunks: com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.chunksList
      )
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     * @param value The chunks to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addChunks")
    public fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.add(value: nearclip.sync.Sync.DataChunk) {
      _builder.addChunks(value)
    }
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     * @param value The chunks to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignChunks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.plusAssign(value: nearclip.sync.Sync.DataChunk) {
      add(value)
    }
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     * @param values The chunks to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllChunks")
    public fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.addAll(values: kotlin.collections.Iterable<nearclip.sync.Sync.DataChunk>) {
      _builder.addAllChunks(values)
    }
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     * @param values The chunks to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllChunks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.plusAssign(values: kotlin.collections.Iterable<nearclip.sync.Sync.DataChunk>) {
      addAll(values)
    }
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     * @param index The index to set the value at.
     * @param value The chunks to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setChunks")
    public operator fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.set(index: kotlin.Int, value: nearclip.sync.Sync.DataChunk) {
      _builder.setChunks(index, value)
    }
    /**
     * `repeated .nearclip.sync.DataChunk chunks = 4;`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearChunks")
    public fun com.google.protobuf.kotlin.DslList<nearclip.sync.Sync.DataChunk, ChunksProxy>.clear() {
      _builder.clearChunks()
    }

    /**
     * `uint64 timestamp = 5;`
     */
    public var timestamp: kotlin.Long
      @kotlin.jvm.JvmName("getTimestamp")
        get() = _builder.timestamp
      @kotlin.jvm.JvmName("setTimestamp")
        set(value) {
        _builder.timestamp = value
      }
    /**
     * `uint64 timestamp = 5;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * `bytes signature = 6;`
     */
    public var signature: com.google.protobuf.ByteString
      @kotlin.jvm.JvmName("getSignature")
        get() = _builder.signature
      @kotlin.jvm.JvmName("setSignature")
        set(value) {
        _builder.signature = value
      }
    /**
     * `bytes signature = 6;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.sync.Sync.SyncMessage.copy(block: `nearclip.sync`.SyncMessageKt.Dsl.() -> kotlin.Unit): nearclip.sync.Sync.SyncMessage =
  `nearclip.sync`.SyncMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val nearclip.sync.Sync.SyncMessageOrBuilder.dataOrNull: nearclip.sync.Sync.ClipboardData?
  get() = if (hasData()) getData() else null

