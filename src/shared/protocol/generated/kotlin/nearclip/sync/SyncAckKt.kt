// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sync.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.sync;

@kotlin.jvm.JvmName("-initializesyncAck")
public inline fun syncAck(block: nearclip.sync.SyncAckKt.Dsl.() -> kotlin.Unit): nearclip.sync.Sync.SyncAck =
  nearclip.sync.SyncAckKt.Dsl._create(nearclip.sync.Sync.SyncAck.newBuilder()).apply { block() }._build()
/**
 * ```
 * 同步确认
 * ```
 *
 * Protobuf type `nearclip.sync.SyncAck`
 */
public object SyncAckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.sync.Sync.SyncAck.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.sync.Sync.SyncAck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.sync.Sync.SyncAck = _builder.build()

    /**
     * `string data_id = 1;`
     */
    public var dataId: kotlin.String
      @kotlin.jvm.JvmName("getDataId")
        get() = _builder.dataId
      @kotlin.jvm.JvmName("setDataId")
        set(value) {
        _builder.dataId = value
      }
    /**
     * `string data_id = 1;`
     */
    public fun clearDataId() {
      _builder.clearDataId()
    }

    /**
     * `bool success = 2;`
     */
    public var success: kotlin.Boolean
      @kotlin.jvm.JvmName("getSuccess")
        get() = _builder.success
      @kotlin.jvm.JvmName("setSuccess")
        set(value) {
        _builder.success = value
      }
    /**
     * `bool success = 2;`
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }

    /**
     * `string error_message = 3;`
     */
    public var errorMessage: kotlin.String
      @kotlin.jvm.JvmName("getErrorMessage")
        get() = _builder.errorMessage
      @kotlin.jvm.JvmName("setErrorMessage")
        set(value) {
        _builder.errorMessage = value
      }
    /**
     * `string error_message = 3;`
     */
    public fun clearErrorMessage() {
      _builder.clearErrorMessage()
    }

    /**
     * `uint64 timestamp = 4;`
     */
    public var timestamp: kotlin.Long
      @kotlin.jvm.JvmName("getTimestamp")
        get() = _builder.timestamp
      @kotlin.jvm.JvmName("setTimestamp")
        set(value) {
        _builder.timestamp = value
      }
    /**
     * `uint64 timestamp = 4;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.sync.Sync.SyncAck.copy(block: `nearclip.sync`.SyncAckKt.Dsl.() -> kotlin.Unit): nearclip.sync.Sync.SyncAck =
  `nearclip.sync`.SyncAckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

