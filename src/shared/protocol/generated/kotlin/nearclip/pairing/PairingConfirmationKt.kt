// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pairing.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.pairing;

@kotlin.jvm.JvmName("-initializepairingConfirmation")
public inline fun pairingConfirmation(block: nearclip.pairing.PairingConfirmationKt.Dsl.() -> kotlin.Unit): nearclip.pairing.Pairing.PairingConfirmation =
  nearclip.pairing.PairingConfirmationKt.Dsl._create(nearclip.pairing.Pairing.PairingConfirmation.newBuilder()).apply { block() }._build()
/**
 * ```
 * 配对确认
 * ```
 *
 * Protobuf type `nearclip.pairing.PairingConfirmation`
 */
public object PairingConfirmationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.pairing.Pairing.PairingConfirmation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.pairing.Pairing.PairingConfirmation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.pairing.Pairing.PairingConfirmation = _builder.build()

    /**
     * `string session_id = 1;`
     */
    public var sessionId: kotlin.String
      @kotlin.jvm.JvmName("getSessionId")
        get() = _builder.sessionId
      @kotlin.jvm.JvmName("setSessionId")
        set(value) {
        _builder.sessionId = value
      }
    /**
     * `string session_id = 1;`
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * ```
     * 确认哈希
     * ```
     *
     * `bytes confirmation_hash = 2;`
     */
    public var confirmationHash: com.google.protobuf.ByteString
      @kotlin.jvm.JvmName("getConfirmationHash")
        get() = _builder.confirmationHash
      @kotlin.jvm.JvmName("setConfirmationHash")
        set(value) {
        _builder.confirmationHash = value
      }
    /**
     * ```
     * 确认哈希
     * ```
     *
     * `bytes confirmation_hash = 2;`
     */
    public fun clearConfirmationHash() {
      _builder.clearConfirmationHash()
    }

    /**
     * `uint64 timestamp = 3;`
     */
    public var timestamp: kotlin.Long
      @kotlin.jvm.JvmName("getTimestamp")
        get() = _builder.timestamp
      @kotlin.jvm.JvmName("setTimestamp")
        set(value) {
        _builder.timestamp = value
      }
    /**
     * `uint64 timestamp = 3;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.pairing.Pairing.PairingConfirmation.copy(block: `nearclip.pairing`.PairingConfirmationKt.Dsl.() -> kotlin.Unit): nearclip.pairing.Pairing.PairingConfirmation =
  `nearclip.pairing`.PairingConfirmationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

