// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.common;

@kotlin.jvm.JvmName("-initializeerrorMessage")
public inline fun errorMessage(block: nearclip.common.ErrorMessageKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.ErrorMessage =
  nearclip.common.ErrorMessageKt.Dsl._create(nearclip.common.Common.ErrorMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * 标准错误消息
 * ```
 *
 * Protobuf type `nearclip.common.ErrorMessage`
 */
public object ErrorMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.common.Common.ErrorMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.common.Common.ErrorMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.common.Common.ErrorMessage = _builder.build()

    /**
     * `.nearclip.common.ErrorCode code = 1;`
     */
    public var code: nearclip.common.Common.ErrorCode
      @kotlin.jvm.JvmName("getCode")
        get() = _builder.code
      @kotlin.jvm.JvmName("setCode")
        set(value) {
        _builder.code = value
      }
    public var codeValue: kotlin.Int
      @kotlin.jvm.JvmName("getCodeValue")
        get() = _builder.codeValue
      @kotlin.jvm.JvmName("setCodeValue")
        set(value) {
        _builder.codeValue = value
      }
    /**
     * `.nearclip.common.ErrorCode code = 1;`
     */
    public fun clearCode() {
      _builder.clearCode()
    }

    /**
     * `string message = 2;`
     */
    public var message: kotlin.String
      @kotlin.jvm.JvmName("getMessage")
        get() = _builder.message
      @kotlin.jvm.JvmName("setMessage")
        set(value) {
        _builder.message = value
      }
    /**
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * `string details = 3;`
     */
    public var details: kotlin.String
      @kotlin.jvm.JvmName("getDetails")
        get() = _builder.details
      @kotlin.jvm.JvmName("setDetails")
        set(value) {
        _builder.details = value
      }
    /**
     * `string details = 3;`
     */
    public fun clearDetails() {
      _builder.clearDetails()
    }

    /**
     * `uint64 timestamp = 4;`
     */
    public var timestamp: kotlin.Long
      @kotlin.jvm.JvmName("getTimestamp")
        get() = _builder.timestamp
      @kotlin.jvm.JvmName("setTimestamp")
        set(value) {
        _builder.timestamp = value
      }
    /**
     * `uint64 timestamp = 4;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.common.Common.ErrorMessage.copy(block: `nearclip.common`.ErrorMessageKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.ErrorMessage =
  `nearclip.common`.ErrorMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

