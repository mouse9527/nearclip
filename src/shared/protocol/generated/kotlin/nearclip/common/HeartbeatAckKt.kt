// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.common;

@kotlin.jvm.JvmName("-initializeheartbeatAck")
public inline fun heartbeatAck(block: nearclip.common.HeartbeatAckKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.HeartbeatAck =
  nearclip.common.HeartbeatAckKt.Dsl._create(nearclip.common.Common.HeartbeatAck.newBuilder()).apply { block() }._build()
/**
 * ```
 * 心跳响应
 * ```
 *
 * Protobuf type `nearclip.common.HeartbeatAck`
 */
public object HeartbeatAckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.common.Common.HeartbeatAck.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.common.Common.HeartbeatAck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.common.Common.HeartbeatAck = _builder.build()

    /**
     * `string device_id = 1;`
     */
    public var deviceId: kotlin.String
      @kotlin.jvm.JvmName("getDeviceId")
        get() = _builder.deviceId
      @kotlin.jvm.JvmName("setDeviceId")
        set(value) {
        _builder.deviceId = value
      }
    /**
     * `string device_id = 1;`
     */
    public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

    /**
     * `uint64 received_timestamp = 2;`
     */
    public var receivedTimestamp: kotlin.Long
      @kotlin.jvm.JvmName("getReceivedTimestamp")
        get() = _builder.receivedTimestamp
      @kotlin.jvm.JvmName("setReceivedTimestamp")
        set(value) {
        _builder.receivedTimestamp = value
      }
    /**
     * `uint64 received_timestamp = 2;`
     */
    public fun clearReceivedTimestamp() {
      _builder.clearReceivedTimestamp()
    }

    /**
     * `uint32 sequence_number = 3;`
     */
    public var sequenceNumber: kotlin.Int
      @kotlin.jvm.JvmName("getSequenceNumber")
        get() = _builder.sequenceNumber
      @kotlin.jvm.JvmName("setSequenceNumber")
        set(value) {
        _builder.sequenceNumber = value
      }
    /**
     * `uint32 sequence_number = 3;`
     */
    public fun clearSequenceNumber() {
      _builder.clearSequenceNumber()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.common.Common.HeartbeatAck.copy(block: `nearclip.common`.HeartbeatAckKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.HeartbeatAck =
  `nearclip.common`.HeartbeatAckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

