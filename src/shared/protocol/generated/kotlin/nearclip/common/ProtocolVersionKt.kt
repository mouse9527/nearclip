// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package nearclip.common;

@kotlin.jvm.JvmName("-initializeprotocolVersion")
public inline fun protocolVersion(block: nearclip.common.ProtocolVersionKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.ProtocolVersion =
  nearclip.common.ProtocolVersionKt.Dsl._create(nearclip.common.Common.ProtocolVersion.newBuilder()).apply { block() }._build()
/**
 * ```
 * 协议版本信息
 * ```
 *
 * Protobuf type `nearclip.common.ProtocolVersion`
 */
public object ProtocolVersionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: nearclip.common.Common.ProtocolVersion.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: nearclip.common.Common.ProtocolVersion.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): nearclip.common.Common.ProtocolVersion = _builder.build()

    /**
     * `uint32 major = 1;`
     */
    public var major: kotlin.Int
      @kotlin.jvm.JvmName("getMajor")
        get() = _builder.major
      @kotlin.jvm.JvmName("setMajor")
        set(value) {
        _builder.major = value
      }
    /**
     * `uint32 major = 1;`
     */
    public fun clearMajor() {
      _builder.clearMajor()
    }

    /**
     * `uint32 minor = 2;`
     */
    public var minor: kotlin.Int
      @kotlin.jvm.JvmName("getMinor")
        get() = _builder.minor
      @kotlin.jvm.JvmName("setMinor")
        set(value) {
        _builder.minor = value
      }
    /**
     * `uint32 minor = 2;`
     */
    public fun clearMinor() {
      _builder.clearMinor()
    }

    /**
     * `uint32 patch = 3;`
     */
    public var patch: kotlin.Int
      @kotlin.jvm.JvmName("getPatch")
        get() = _builder.patch
      @kotlin.jvm.JvmName("setPatch")
        set(value) {
        _builder.patch = value
      }
    /**
     * `uint32 patch = 3;`
     */
    public fun clearPatch() {
      _builder.clearPatch()
    }

    /**
     * `string build_info = 4;`
     */
    public var buildInfo: kotlin.String
      @kotlin.jvm.JvmName("getBuildInfo")
        get() = _builder.buildInfo
      @kotlin.jvm.JvmName("setBuildInfo")
        set(value) {
        _builder.buildInfo = value
      }
    /**
     * `string build_info = 4;`
     */
    public fun clearBuildInfo() {
      _builder.clearBuildInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun nearclip.common.Common.ProtocolVersion.copy(block: `nearclip.common`.ProtocolVersionKt.Dsl.() -> kotlin.Unit): nearclip.common.Common.ProtocolVersion =
  `nearclip.common`.ProtocolVersionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

